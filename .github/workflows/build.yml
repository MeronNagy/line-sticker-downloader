name: 'publish nightly'

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/workflows/build.yml'

  workflow_dispatch:

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set-version.outputs.VERSION }}
    steps:
      - name: Generate timestamp version
        id: set-version
        run: |
          VERSION="nightly-$(date +'%Y%m%d%H%M%S')"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "$VERSION"

  publish:
    needs: set-version
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            name: 'macOS ARM'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            name: 'macOS Intel'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            name: 'Linux'
            args: ''
          - platform: 'windows-latest'
            name: 'Windows'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install Linux dependencies
        if: matrix.name == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y lldb gcc-multilib libsecret-1-0 libsecret-1-dev libgtk-3-dev libsoup-3.0-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev libxdo-dev pkg-config

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Build the project
        run: |
          cargo build --release ${{ matrix.args }}

      - name: Rename binary
        if: matrix.name != 'Windows'
        run: |
          ls target/release
          if [ "${{ matrix.name }}" == "macOS Intel" ]; then
            cp target/x86_64-apple-darwin/release/line-sticker-downloader target/release/line-sticker-downloader-x86_64-apple-darwin
          elif [ "${{ matrix.name }}" == "macOS ARM" ]; then
            cp target/aarch64-apple-darwin/release/line-sticker-downloader target/release/line-sticker-downloader-aarch64-apple-darwin
          else
            cp target/release/line-sticker-downloader target/release/line-sticker-downloader-x86_64-linux
          fi 

      - uses: softprops/action-gh-release@v2
        if: matrix.name == 'Windows'
        with:
          name: Nightly Build ${{ needs.set-version.outputs.VERSION }}
          tag_name: "${{ needs.set-version.outputs.VERSION }}"
          files: target/release/line-sticker-downloader.exe

      - uses: softprops/action-gh-release@v2
        if: matrix.name != 'Windows'
        with:
          name: Nightly Build ${{ needs.set-version.outputs.VERSION }}
          tag_name: "${{ needs.set-version.outputs.VERSION }}"
          files: target/release/line-sticker-downloader-*
